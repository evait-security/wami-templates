id: amber
title: amber - position-independent PE loader
tags:
  - pe-loader
  - in-memory-execution
  - native-pe
  - stealthy
  - in-memory-payload
  - go
  - bypass-anti-virus
  - bypass-firewall
  - bypass-ids
  - bypass-ips-products
  - reflective-payloads
  - direct-memory-execution
  - SGN-encoder
  - crc32-api
  - iat-api
description: Amber is a position-independent(reflective) PE loader that enables in-memory execution of native PE files(EXE, DLL, SYS...). It enables stealthy in-memory payload deployment that can be used to bypass anti-virus, firewall, IDS, IPS products, and application white-listing mitigations. Reflective payloads generated by Amber can either be staged from a remote server or executed directly in memory much like a generic shellcode. By default, every generated payload is encoded using the new generation SGN encoder. Amber uses CRC32_API and IAT_API for inconspicuously resolving the Windows API function addresses. After the PE file is loaded and executed in memory, the reflective payload is erased for evading memory scanners.
references:
  - https://github.com/EgeBalci/Amber
  - https://www.youtube.com/watch?v=lCPdKSH6RMc
  - https://www.youtube.com/watch?v=3en0ftnjEpE
  - https://www.youtube.com/watch?v=JVv_spX6D4U
why_not:
  -

tag:
 -
